{"componentChunkName":"component---src-pages-examples-sql-json-content-parent-file-id-jsx","path":"/examples/sql/4cb50451-5fd0-583b-866a-03730ccd1fc2/","result":{"data":{"jsonContent":{"id":"69dcaa1a-a7ad-5af1-8511-6bd0e292c428","content":"-- {\"id\":1651,\"name\":\"james\",\"money\":293.899778,\"dateone\":\"2020-07-30 10:08:22\",\"age\":\"33\",\"datethree\":\"2020-07-30 10:08:22.123\",\"datesix\":\"2020-07-30 10:08:22.123456\",\"datenigth\":\"2020-07-30 10:08:22.123456789\",\"dtdate\":\"2020-07-30\",\"dttime\":\"11:08:22\"}\nCREATE TABLE source\n(\n    id        INT\n    , name      STRING\n    , money     decimal\n    , dateone   timestamp\n    , age       bigint\n    , datethree timestamp\n    , datesix   timestamp(6)\n    , datenigth timestamp(9)\n    , dtdate    date\n    , dttime    time\n    , PROCTIME AS PROCTIME()\n) WITH (\n      -- 'connector' = 'stream-x'\n\n      'connector' = 'kafka-x'\n      ,'topic' = 'da'\n      ,'properties.bootstrap.servers' = 'kudu1:9092'\n      ,'properties.group.id' = 'luna_g'\n      -- ,'scan.startup.mode' = 'earliest-offset'\n      ,'format' = 'json'\n      ,'json.timestamp-format.standard' = 'SQL'\n      );\n\n\nCREATE TABLE side\n(\n    id        INT\n    , name      STRING\n    , money     decimal\n    , dateone   timestamp\n    , age       bigint\n    , datethree timestamp\n    , datesix   timestamp(6)\n    , datenigth timestamp(9)\n    , dtdate    date\n    , dttime    time\n\n    , afloat    float\n    , adouble   double\n    , aboolean  BOOLEAN\n    , abigint   BIGINT\n    , atinyint  TINYINT\n    , avarchar  varchar\n    , asmallint SMALLINT\n    -- , primary key (id,name) NOT ENFORCED -- 这里的pk，并不会作为查询redis的主键，所以作为维表可不写。是通过select中的join条件作为主键\n) WITH (\n      'connector' = 'redis-x' --必填\n      ,'url' = 'localhost:6379' --必填，格式ip:port[,ip:port]\n      ,'table-name' = 'cx' --必填\n      ,'password' = '123456' -- 密码 无默认，非必填项\n      ,'redis-type' = '1' -- redis模式（1 单机，2 哨兵， 3 集群），默认：1\n      ,'master-name' = 'lala' -- 主节点名称（哨兵模式下为必填项）\n      ,'database' = '0' -- redis 的数据库地址，默认：0\n\n      ,'timeout' = '10000' -- 连接超时时间，默认：10000毫秒\n      ,'max.total' = '5' -- 最大连接数 ，默认：8\n      ,'max.idle' = '5' -- 最大空闲连接数，默认：8\n      ,'min.idle' = '0' -- 最小空闲连接数 ，默认：0\n\n      ,'lookup.cache-type' = 'all' -- 维表缓存类型(NONE、LRU、ALL)，默认LRU\n      ,'lookup.cache-period' = '4600000' -- ALL维表每隔多久加载一次数据，默认3600000毫秒\n      ,'lookup.cache.max-rows' = '20000' -- lru维表缓存数据的条数，默认10000条\n      ,'lookup.cache.ttl' = '700000' -- lru维表缓存数据的时间，默认60000毫秒\n      ,'lookup.fetch-size' = '2000' -- ALL维表每次从数据库加载的条数，默认1000条\n      ,'lookup.async-timeout' = '30000' -- lru维表缓访问超时时间，默认10000毫秒，暂时没用到\n      ,'lookup.parallelism' = '3' -- 维表并行度，默认null\n      );\n\n-- 维表数据\n-- 127.0.0.1:6379> HGETALL cx_1651\n--  1) \"dttime\"\n--  2) \"14:11:18\"\n--  3) \"adouble\"\n--  4) \"3807.67\"\n--  5) \"dtdate\"\n--  6) \"2021-06-22\"\n--  7) \"aboolean\"\n--  8) \"true\"\n--  9) \"datenigth\"\n-- 10) \"2021-06-22 06:11:18.478\"\n-- 11) \"afloat\"\n-- 12) \"7271.44\"\n-- 13) \"asmallint\"\n-- 14) \"7821\"\n-- 15) \"avarchar\"\n-- 16) \"h1\"\n-- 17) \"datesix\"\n-- 18) \"2021-06-22 06:11:18.478\"\n-- 19) \"money\"\n-- 20) \"3059\"\n\nCREATE TABLE sink\n(\n    id         INT\n    , name       STRING\n    , money      decimal\n    , dateone    timestamp\n    , age        bigint\n    , datethree  timestamp\n    , datesix    timestamp(6)\n    , datenigth  timestamp(9)\n    , dtdate     date\n    , dttime     time\n\n    , aid        INT\n    , aname      STRING\n    , amoney     decimal\n    , adateone   timestamp\n    , aage       bigint\n    , adatethree timestamp\n    , adatesix   timestamp(6)\n    , adatenigth timestamp(9)\n    , adtdate    date\n    , adttime    time\n\n    , afloat    float\n    , adouble   double\n    , aboolean  BOOLEAN\n    , abigint   BIGINT\n    , atinyint  TINYINT\n    , avarchar  varchar\n    , asmallint SMALLINT\n    -- , primary key (id, name) NOT ENFORCED\n) WITH (\n      'connector' = 'stream-x'\n      );\n\n\nINSERT INTO sink\nSELECT\n    u.id\n     , u.name\n     , u.money\n     , u.dateone\n     , u.age\n     , u.datethree\n     , u.datesix\n     , u.datenigth\n     , u.dtdate\n     , u.dttime\n\n     , s.id        as aid\n     , s.name      as aname\n     , s.money     as amoney\n     , s.dateone   as adateone\n     , s.age       as aage\n     , s.datethree as adatethree\n     , s.datesix   as adatesix\n     , s.datenigth as adatenigth\n     , s.dtdate    as adtdate\n     , s.dttime    as adttime\n\n     , s.afloat\n     , s.adouble\n     , s.aboolean\n     , s.abigint\n     , s.atinyint\n     , s.avarchar\n     , s.asmallint\nfrom source u\n         left join side FOR SYSTEM_TIME AS OF u.PROCTIME AS s\n                   on u.id = s.id;\n"}},"pageContext":{"id":"69dcaa1a-a7ad-5af1-8511-6bd0e292c428","parent__id":"4cb50451-5fd0-583b-866a-03730ccd1fc2","__params":{"parent__id":"4cb50451-5fd0-583b-866a-03730ccd1fc2"}}},"staticQueryHashes":["1197112220","1410458087","527733040","63159454"]}